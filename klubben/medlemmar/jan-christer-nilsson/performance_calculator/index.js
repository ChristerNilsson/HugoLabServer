// Generated by CoffeeScript 2.7.0
var ass, calculate, expected_score, extrapolate, perf_fide, performance, performance_rating, summa;

ass = function(a, b) {
  if (a !== b) {
    console.log('assert failure');
    console.log(a);
    return console.log(b);
  }
};

summa = function(arr) {
  var i, item, len, res;
  res = 0;
  for (i = 0, len = arr.length; i < len; i++) {
    item = arr[i];
    res += item;
  }
  return res;
};

expected_score = function(ratings, own_rating) {
  var rating;
  return summa((function() {
    var i, len, results;
    results = [];
    for (i = 0, len = ratings.length; i < len; i++) {
      rating = ratings[i];
      results.push(1 / (1 + 10 ** ((rating - own_rating) / 400)));
    }
    return results;
  })());
};

performance_rating = function(pp, ratings) {
  var hi, lo, rating;
  lo = 0;
  hi = 4000;
  while (Math.abs(hi - lo) > 0.001) {
    rating = (lo + hi) / 2;
    if (pp > expected_score(ratings, rating)) {
      lo = rating;
    } else {
      hi = rating;
    }
  }
  return rating;
};


// Anv채nd tv책 extremv채rden d책 man har 0% eller 100%
extrapolate = function(a0, b0, elos) {
  var a, b;
  a = performance_rating(a0, elos);
  b = performance_rating(b0, elos);
  return b + b - a;
};

performance = function(pp, elos) {
  var n;
  n = elos.length;
  if (n === 1) {
    if (pp === 0) {
      return extrapolate(0.50, 0.25, elos);
    }
    if (pp === n) {
      return extrapolate(0.50, 0.75, elos);
    }
  } else {
    if (pp === 0) {
      return extrapolate(1, 0.5, elos);
    }
    if (pp === n) {
      return extrapolate(n - 1, n - 0.5, elos);
    }
  }
  return performance_rating(pp, elos);
};

perf_fide = function(elos, score, average) {
  var diff, dp, percentage;
  if (score < 0 || elos.length < score) {
    return "";
  }
  dp = [0, 7, 14, 21, 29, 36, 43, 50, 57, 65, 72, 80, 87, 95, 102, 110, 117, 125, 133, 141, 149, 158, 166, 175, 184, 193, 202, 211, 220, 230, 240, 251, 262, 273, 284, 296, 309, 322, 336, 351, 366, 383, 401, 422, 444, 470, 501, 538, 589, 677, 800];
  percentage = Math.round(100 * score / elos.length);
  diff = percentage >= 50 ? dp[percentage - 50] : -dp[50 - percentage];
  return average + diff;
};

calculate = function() {
  var average, data, elos, input, item, pp;
  input = document.getElementById("INPUT").value;
  input = input.replaceAll(',', ' ');
  data = input.trim().split(' ');
  if (data.length <= 1) {
    return;
  }
  pp = parseFloat(data.pop());
  elos = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = data.length; i < len; i++) {
      item = data[i];
      results.push(parseFloat(item));
    }
    return results;
  })();
  average = summa(elos) / elos.length;
  document.getElementById("AVG").innerText = average.toFixed(0);
  document.getElementById("PR").innerText = performance(pp, elos).toFixed(3);
  return document.getElementById("FIDE").innerText = perf_fide(elos, pp, average).toFixed(0);
};

calculate();

ass("1118", performance(0.0, [1500]).toFixed(0));

ass("1500", performance(0.5, [1500]).toFixed(0));

ass("1882", performance(1.0, [1500]).toFixed(0));

ass("1161", performance(0.0, [1500, 1600]).toFixed(0));

ass("1356", performance(0.5, [1500, 1600]).toFixed(0));

ass("1550", performance(1.0, [1500, 1600]).toFixed(0));

ass("1744", performance(1.5, [1500, 1600]).toFixed(0));

ass("1939", performance(2.0, [1500, 1600]).toFixed(0));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi5cXC4uXFwuLlxcLi5cXC4uXFwiLCJzb3VyY2VzIjpbImNvbnRlbnRcXGtsdWJiZW5cXG1lZGxlbW1hclxcamFuLWNocmlzdGVyLW5pbHNzb25cXFBlcmZvcm1hbmNlX0NhbGN1bGF0b3JcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxHQUFBLEVBQUEsU0FBQSxFQUFBLGNBQUEsRUFBQSxXQUFBLEVBQUEsU0FBQSxFQUFBLFdBQUEsRUFBQSxrQkFBQSxFQUFBOztBQUFBLEdBQUEsR0FBTSxRQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtFQUNMLElBQUcsQ0FBQSxLQUFLLENBQVI7SUFDQyxPQUFPLENBQUMsR0FBUixDQUFZLGdCQUFaO0lBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxDQUFaO1dBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxDQUFaLEVBSEQ7O0FBREs7O0FBTU4sS0FBQSxHQUFRLFFBQUEsQ0FBQyxHQUFELENBQUE7QUFDUixNQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBO0VBQUMsR0FBQSxHQUFNO0VBQ04sS0FBQSxxQ0FBQTs7SUFDQyxHQUFBLElBQU87RUFEUjtTQUVBO0FBSk87O0FBTVIsY0FBQSxHQUFpQixRQUFBLENBQUMsT0FBRCxFQUFVLFVBQVYsQ0FBQTtBQUF3QixNQUFBO1NBQUMsS0FBQTs7QUFBTztJQUFBLEtBQUEseUNBQUE7O21CQUFBLENBQUEsR0FBSSxDQUFDLENBQUEsR0FBSSxFQUFBLElBQUksQ0FBQyxDQUFDLE1BQUEsR0FBUyxVQUFWLENBQUEsR0FBd0IsR0FBekIsQ0FBVDtJQUFKLENBQUE7O01BQVA7QUFBekI7O0FBRWpCLGtCQUFBLEdBQXFCLFFBQUEsQ0FBQyxFQUFELEVBQUssT0FBTCxDQUFBO0FBQ3JCLE1BQUEsRUFBQSxFQUFBLEVBQUEsRUFBQTtFQUFDLEVBQUEsR0FBSztFQUNMLEVBQUEsR0FBSztBQUNM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RUEsR0FBQSxDQUFJLE1BQUosRUFBWSxXQUFBLENBQVksR0FBWixFQUFnQixDQUFDLElBQUQsQ0FBaEIsQ0FBdUIsQ0FBQyxPQUF4QixDQUFnQyxDQUFoQyxDQUFaOztBQUNBLEdBQUEsQ0FBSSxNQUFKLEVBQVksV0FBQSxDQUFZLEdBQVosRUFBZ0IsQ0FBQyxJQUFELENBQWhCLENBQXVCLENBQUMsT0FBeEIsQ0FBZ0MsQ0FBaEMsQ0FBWjs7QUFDQSxHQUFBLENBQUksTUFBSixFQUFZLFdBQUEsQ0FBWSxHQUFaLEVBQWdCLENBQUMsSUFBRCxDQUFoQixDQUF1QixDQUFDLE9BQXhCLENBQWdDLENBQWhDLENBQVo7O0FBRUEsR0FBQSxDQUFJLE1BQUosRUFBWSxXQUFBLENBQVksR0FBWixFQUFnQixDQUFDLElBQUQsRUFBTSxJQUFOLENBQWhCLENBQTRCLENBQUMsT0FBN0IsQ0FBcUMsQ0FBckMsQ0FBWjs7QUFDQSxHQUFBLENBQUksTUFBSixFQUFZLFdBQUEsQ0FBWSxHQUFaLEVBQWdCLENBQUMsSUFBRCxFQUFNLElBQU4sQ0FBaEIsQ0FBNEIsQ0FBQyxPQUE3QixDQUFxQyxDQUFyQyxDQUFaOztBQUNBLEdBQUEsQ0FBSSxNQUFKLEVBQVksV0FBQSxDQUFZLEdBQVosRUFBZ0IsQ0FBQyxJQUFELEVBQU0sSUFBTixDQUFoQixDQUE0QixDQUFDLE9BQTdCLENBQXFDLENBQXJDLENBQVo7O0FBQ0EsR0FBQSxDQUFJLE1BQUosRUFBWSxXQUFBLENBQVksR0FBWixFQUFnQixDQUFDLElBQUQsRUFBTSxJQUFOLENBQWhCLENBQTRCLENBQUMsT0FBN0IsQ0FBcUMsQ0FBckMsQ0FBWjs7QUFDQSxHQUFBLENBQUksTUFBSixFQUFZLFdBQUEsQ0FBWSxHQUFaLEVBQWdCLENBQUMsSUFBRCxFQUFNLElBQU4sQ0FBaEIsQ0FBNEIsQ0FBQyxPQUE3QixDQUFxQyxDQUFyQyxDQUFaIiwic291cmNlc0NvbnRlbnQiOlsiYXNzID0gKGEsYikgLT5cclxuXHRpZiBhICE9IGIgXHJcblx0XHRjb25zb2xlLmxvZyAnYXNzZXJ0IGZhaWx1cmUnXHJcblx0XHRjb25zb2xlLmxvZyBhXHJcblx0XHRjb25zb2xlLmxvZyBiXHJcblxyXG5zdW1tYSA9IChhcnIpIC0+XHJcblx0cmVzID0gMFxyXG5cdGZvciBpdGVtIGluIGFyclxyXG5cdFx0cmVzICs9IGl0ZW1cclxuXHRyZXNcclxuXHJcbmV4cGVjdGVkX3Njb3JlID0gKHJhdGluZ3MsIG93bl9yYXRpbmcpIC0+IHN1bW1hICgxIC8gKDEgKyAxMCoqKChyYXRpbmcgLSBvd25fcmF0aW5nKSAvIDQwMCkpIGZvciByYXRpbmcgaW4gcmF0aW5ncylcclxuXHJcbnBlcmZvcm1hbmNlX3JhdGluZyA9IChwcCwgcmF0aW5ncykgLT5cclxuXHRsbyA9IDBcclxuXHRoaSA9IDQwMDBcclxuXHR3aGlsZSBNYXRoLmFicyhoaSAtIGxvKSA+IDAuMDAxXHJcblx0XHRyYXRpbmcgPSAobG8gKyBoaSkgLyAyXHJcblx0XHRpZiBwcCA+IGV4cGVjdGVkX3Njb3JlIHJhdGluZ3MsIHJhdGluZ1xyXG5cdFx0XHRsbyA9IHJhdGluZ1xyXG5cdFx0ZWxzZVxyXG5cdFx0XHRoaSA9IHJhdGluZ1xyXG5cdHJhdGluZ1xyXG4gXHJcbiMgQW52w6RuZCB0dsOlIGV4dHJlbXbDpHJkZW4gZMOlIG1hbiBoYXIgMCUgZWxsZXIgMTAwJVxyXG5leHRyYXBvbGF0ZSA9IChhMCwgYjAsIGVsb3MpIC0+XHJcblx0YSA9IHBlcmZvcm1hbmNlX3JhdGluZyBhMCxlbG9zXHJcblx0YiA9IHBlcmZvcm1hbmNlX3JhdGluZyBiMCxlbG9zXHJcblx0YiArIGIgLSBhXHJcblxyXG5wZXJmb3JtYW5jZSA9IChwcCxlbG9zKSAtPiBcclxuXHRuID0gZWxvcy5sZW5ndGhcclxuXHRpZiBuID09IDFcclxuXHRcdGlmIHBwID09IDAgdGhlbiByZXR1cm4gZXh0cmFwb2xhdGUgMC41MCwwLjI1LGVsb3NcclxuXHRcdGlmIHBwID09IG4gdGhlbiByZXR1cm4gZXh0cmFwb2xhdGUgMC41MCwwLjc1LGVsb3NcclxuXHRlbHNlXHJcblx0XHRpZiBwcCA9PSAwIHRoZW4gcmV0dXJuIGV4dHJhcG9sYXRlICAgMSwgIDAuNSxlbG9zXHJcblx0XHRpZiBwcCA9PSBuIHRoZW4gcmV0dXJuIGV4dHJhcG9sYXRlIG4tMSxuLTAuNSxlbG9zXHJcblx0cGVyZm9ybWFuY2VfcmF0aW5nIHBwLGVsb3NcclxuXHJcbnBlcmZfZmlkZSA9IChlbG9zLCBzY29yZSwgYXZlcmFnZSkgLT5cclxuXHRpZiBzY29yZSA8IDAgb3IgZWxvcy5sZW5ndGggPCBzY29yZSB0aGVuIHJldHVybiBcIlwiXHJcblxyXG5cdGRwID0gWzAsIDcsIDE0LCAyMSwgMjksIDM2LCA0MywgNTAsIDU3LCA2NSwgXHJcblx0XHQ3MiwgODAsIDg3LCA5NSwgMTAyLCAxMTAsIDExNywgMTI1LCAxMzMsIDE0MSwgXHJcblx0XHQxNDksIDE1OCwgMTY2LCAxNzUsIDE4NCwgMTkzLCAyMDIsIDIxMSwgMjIwLCAyMzAsIFxyXG5cdFx0MjQwLCAyNTEsIDI2MiwgMjczLCAyODQsIDI5NiwgMzA5LCAzMjIsIDMzNiwgMzUxLCBcclxuXHRcdDM2NiwgMzgzLCA0MDEsIDQyMiwgNDQ0LCA0NzAsIDUwMSwgNTM4LCA1ODksIDY3NywgODAwXVxyXG5cdFxyXG5cdHBlcmNlbnRhZ2UgPSBNYXRoLnJvdW5kIDEwMCAqIHNjb3JlIC8gZWxvcy5sZW5ndGhcclxuXHJcblx0ZGlmZiA9IGlmIHBlcmNlbnRhZ2UgPj0gNTAgdGhlbiBkcFtwZXJjZW50YWdlIC0gNTBdIGVsc2UgLWRwWzUwIC0gcGVyY2VudGFnZV1cclxuXHRhdmVyYWdlICsgZGlmZlxyXG5cclxuY2FsY3VsYXRlID0gLT5cclxuXHRpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiSU5QVVRcIikudmFsdWVcclxuXHRpbnB1dCA9IGlucHV0LnJlcGxhY2VBbGwgJywnLCcgJ1xyXG5cdGRhdGEgPSBpbnB1dC50cmltKCkuc3BsaXQgJyAnXHJcblx0aWYgZGF0YS5sZW5ndGggPD0gMSB0aGVuIHJldHVyblxyXG5cdHBwID0gcGFyc2VGbG9hdCBkYXRhLnBvcCgpXHJcblx0ZWxvcyA9IChwYXJzZUZsb2F0IGl0ZW0gZm9yIGl0ZW0gaW4gZGF0YSlcclxuXHRhdmVyYWdlID0gc3VtbWEoZWxvcykgLyBlbG9zLmxlbmd0aFxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiQVZHXCIpLmlubmVyVGV4dCA9IGF2ZXJhZ2UudG9GaXhlZCAwXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQUlwiKS5pbm5lclRleHQgPSBwZXJmb3JtYW5jZShwcCwgZWxvcykudG9GaXhlZCAzXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJGSURFXCIpLmlubmVyVGV4dCA9IHBlcmZfZmlkZShlbG9zLCBwcCwgYXZlcmFnZSkudG9GaXhlZCAwXHJcbiBcclxuY2FsY3VsYXRlKClcclxuXHJcbmFzcyBcIjExMThcIiwgcGVyZm9ybWFuY2UoMC4wLFsxNTAwXSkudG9GaXhlZCAwXHJcbmFzcyBcIjE1MDBcIiwgcGVyZm9ybWFuY2UoMC41LFsxNTAwXSkudG9GaXhlZCAwXHJcbmFzcyBcIjE4ODJcIiwgcGVyZm9ybWFuY2UoMS4wLFsxNTAwXSkudG9GaXhlZCAwXHJcblxyXG5hc3MgXCIxMTYxXCIsIHBlcmZvcm1hbmNlKDAuMCxbMTUwMCwxNjAwXSkudG9GaXhlZCAwXHJcbmFzcyBcIjEzNTZcIiwgcGVyZm9ybWFuY2UoMC41LFsxNTAwLDE2MDBdKS50b0ZpeGVkIDBcclxuYXNzIFwiMTU1MFwiLCBwZXJmb3JtYW5jZSgxLjAsWzE1MDAsMTYwMF0pLnRvRml4ZWQgMFxyXG5hc3MgXCIxNzQ0XCIsIHBlcmZvcm1hbmNlKDEuNSxbMTUwMCwxNjAwXSkudG9GaXhlZCAwXHJcbmFzcyBcIjE5MzlcIiwgcGVyZm9ybWFuY2UoMi4wLFsxNTAwLDE2MDBdKS50b0ZpeGVkIDBcclxuIl19
//# sourceURL=c:\github\HugoLab\content\klubben\medlemmar\jan-christer-nilsson\Performance_Calculator\index.coffee